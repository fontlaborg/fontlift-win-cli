# this_file: .github/workflows/release.yml
# Release Workflow - creates GitHub releases when tags are pushed

name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Resolve version from tag
      id: version
      shell: pwsh
      run: |
        $ref = $env:GITHUB_REF_NAME
        if ($ref.StartsWith('v')) {
          $ref = $ref.Substring(1)
        }
        $json = & scripts/get-version.ps1 -Version $ref -Format Json
        $info = $json | ConvertFrom-Json
        "VERSION_BASE=$($info.base)" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        "VERSION_SEMVER=$($info.semver)" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        "VERSION_TAG=$($info.tag)" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        Write-Host "Building release for $($info.semver)"

    - name: Build release
      shell: cmd
      run: build.cmd %VERSION_SEMVER%

    - name: Package release
      shell: cmd
      run: publish.cmd %VERSION_SEMVER%

    - name: Generate checksums
      shell: cmd
      run: |
        cd dist
        certutil -hashfile fontlift-%VERSION_TAG%.zip SHA256 > checksums.txt
        type checksums.txt

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/fontlift-${{ env.VERSION_TAG }}.zip
          dist/checksums.txt
        generate_release_notes: true
        draft: false
        prerelease: false
        body: |
          ## fontlift-win-cli ${{ env.VERSION_TAG }}

          Windows CLI tool for font installation and management.

          ### Installation
          1. Download `fontlift-${{ env.VERSION_TAG }}.zip`
          2. Verify checksum (see `checksums.txt`)
          3. Extract `fontlift.exe` to a directory in your PATH
          4. Run `fontlift.exe` from an elevated command prompt

          ### Usage
          ```
          fontlift list              List installed fonts
          fontlift install font.ttf  Install a font
          fontlift uninstall -n Arial  Uninstall a font
          fontlift remove -p font.ttf  Remove font and delete file
          ```

          See [README.md](https://github.com/fontlaborg/fontlift-win-cli/blob/main/README.md) for full documentation.
