2025-11-01T00:45:27.2816328Z ##[group]Run actions/checkout@v4
2025-11-01T00:45:27.2817115Z with:
2025-11-01T00:45:27.2817283Z   fetch-depth: 0
2025-11-01T00:45:27.2817478Z   repository: fontlaborg/fontlift-win-cli
2025-11-01T00:45:27.2817898Z   token: ***
2025-11-01T00:45:27.2818062Z   ssh-strict: true
2025-11-01T00:45:27.2818228Z   ssh-user: git
2025-11-01T00:45:27.2818399Z   persist-credentials: true
2025-11-01T00:45:27.2818594Z   clean: true
2025-11-01T00:45:27.2818774Z   sparse-checkout-cone-mode: true
2025-11-01T00:45:27.2819359Z   fetch-tags: false
2025-11-01T00:45:27.2819580Z   show-progress: true
2025-11-01T00:45:27.2819776Z   lfs: false
2025-11-01T00:45:27.2819929Z   submodules: false
2025-11-01T00:45:27.2820108Z   set-safe-directory: true
2025-11-01T00:45:27.2820615Z ##[endgroup]
2025-11-01T00:45:27.5757312Z Syncing repository: fontlaborg/fontlift-win-cli
2025-11-01T00:45:27.5759826Z ##[group]Getting Git version info
2025-11-01T00:45:27.5761250Z Working directory is 'D:\a\fontlift-win-cli\fontlift-win-cli'
2025-11-01T00:45:27.6947981Z [command]"C:\Program Files\Git\bin\git.exe" version
2025-11-01T00:45:27.8644157Z git version 2.51.1.windows.1
2025-11-01T00:45:27.8711309Z ##[endgroup]
2025-11-01T00:45:27.8738226Z Temporarily overriding HOME='D:\a\_temp\66140a6f-1e9b-4c2e-85cd-f9a564d70975' before making global git config changes
2025-11-01T00:45:27.8739510Z Adding repository directory to the temporary git global config as a safe directory
2025-11-01T00:45:27.8752144Z [command]"C:\Program Files\Git\bin\git.exe" config --global --add safe.directory D:\a\fontlift-win-cli\fontlift-win-cli
2025-11-01T00:45:27.9069892Z Deleting the contents of 'D:\a\fontlift-win-cli\fontlift-win-cli'
2025-11-01T00:45:27.9076689Z ##[group]Initializing the repository
2025-11-01T00:45:27.9087270Z [command]"C:\Program Files\Git\bin\git.exe" init D:\a\fontlift-win-cli\fontlift-win-cli
2025-11-01T00:45:28.1587318Z Initialized empty Git repository in D:/a/fontlift-win-cli/fontlift-win-cli/.git/
2025-11-01T00:45:28.1637794Z [command]"C:\Program Files\Git\bin\git.exe" remote add origin https://github.com/fontlaborg/fontlift-win-cli
2025-11-01T00:45:28.1977949Z ##[endgroup]
2025-11-01T00:45:28.1978897Z ##[group]Disabling automatic garbage collection
2025-11-01T00:45:28.1994790Z [command]"C:\Program Files\Git\bin\git.exe" config --local gc.auto 0
2025-11-01T00:45:28.2318874Z ##[endgroup]
2025-11-01T00:45:28.2319668Z ##[group]Setting up auth
2025-11-01T00:45:28.2342396Z [command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp core\.sshCommand
2025-11-01T00:45:28.2676781Z [command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :\""
2025-11-01T00:45:33.0192457Z [command]"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-11-01T00:45:33.0540847Z [command]"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :\""
2025-11-01T00:45:33.6604269Z [command]"C:\Program Files\Git\bin\git.exe" config --local http.https://github.com/.extraheader "AUTHORIZATION: basic ***"
2025-11-01T00:45:33.6925803Z ##[endgroup]
2025-11-01T00:45:33.6926923Z ##[group]Fetching the repository
2025-11-01T00:45:33.6941783Z [command]"C:\Program Files\Git\bin\git.exe" -c protocol.version=2 fetch --prune --no-recurse-submodules origin +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
2025-11-01T00:45:34.3683911Z From https://github.com/fontlaborg/fontlift-win-cli
2025-11-01T00:45:34.3684701Z  * [new branch]      main       -> origin/main
2025-11-01T00:45:34.3685079Z  * [new tag]         v0.1.0     -> v0.1.0
2025-11-01T00:45:34.3685440Z  * [new tag]         v1.0.0     -> v1.0.0
2025-11-01T00:45:34.3685786Z  * [new tag]         v1.1.0     -> v1.1.0
2025-11-01T00:45:34.3690308Z  * [new tag]         v1.1.1     -> v1.1.1
2025-11-01T00:45:34.3690700Z  * [new tag]         v1.1.2     -> v1.1.2
2025-11-01T00:45:34.3691098Z  * [new tag]         v1.1.3     -> v1.1.3
2025-11-01T00:45:34.3691482Z  * [new tag]         v1.1.4     -> v1.1.4
2025-11-01T00:45:34.3691878Z  * [new tag]         v1.1.5     -> v1.1.5
2025-11-01T00:45:34.3692273Z  * [new tag]         v1.1.6     -> v1.1.6
2025-11-01T00:45:34.3692667Z  * [new tag]         v1.1.7     -> v1.1.7
2025-11-01T00:45:34.3693044Z  * [new tag]         v1.1.8     -> v1.1.8
2025-11-01T00:45:34.3693425Z  * [new tag]         v1.1.9     -> v1.1.9
2025-11-01T00:45:34.3904464Z [command]"C:\Program Files\Git\bin\git.exe" tag --list v1.1.9
2025-11-01T00:45:34.4203663Z v1.1.9
2025-11-01T00:45:34.4255045Z [command]"C:\Program Files\Git\bin\git.exe" rev-parse refs/tags/v1.1.9
2025-11-01T00:45:34.4525700Z b53e0b9be95379af8dd39ddd01f8a588c88182e2
2025-11-01T00:45:34.4562857Z ##[endgroup]
2025-11-01T00:45:34.4563440Z ##[group]Determining the checkout info
2025-11-01T00:45:34.4565583Z ##[endgroup]
2025-11-01T00:45:34.4581438Z [command]"C:\Program Files\Git\bin\git.exe" sparse-checkout disable
2025-11-01T00:45:34.4925513Z [command]"C:\Program Files\Git\bin\git.exe" config --local --unset-all extensions.worktreeConfig
2025-11-01T00:45:34.5221858Z ##[group]Checking out the ref
2025-11-01T00:45:34.5235056Z [command]"C:\Program Files\Git\bin\git.exe" checkout --progress --force refs/tags/v1.1.9
2025-11-01T00:45:34.5767172Z Note: switching to 'refs/tags/v1.1.9'.
2025-11-01T00:45:34.5767643Z 
2025-11-01T00:45:34.5767950Z You are in 'detached HEAD' state. You can look around, make experimental
2025-11-01T00:45:34.5768692Z changes and commit them, and you can discard any commits you make in this
2025-11-01T00:45:34.5769424Z state without impacting any branches by switching back to a branch.
2025-11-01T00:45:34.5769880Z 
2025-11-01T00:45:34.5770153Z If you want to create a new branch to retain commits you create, you may
2025-11-01T00:45:34.5770850Z do so (now or later) by using -c with the switch command. Example:
2025-11-01T00:45:34.5772725Z 
2025-11-01T00:45:34.5772895Z   git switch -c <new-branch-name>
2025-11-01T00:45:34.5773164Z 
2025-11-01T00:45:34.5773300Z Or undo this operation with:
2025-11-01T00:45:34.5773529Z 
2025-11-01T00:45:34.5773628Z   git switch -
2025-11-01T00:45:34.5773793Z 
2025-11-01T00:45:34.5774100Z Turn off this advice by setting config variable advice.detachedHead to false
2025-11-01T00:45:34.5774563Z 
2025-11-01T00:45:34.5774683Z HEAD is now at b53e0b9 v1.1.9
2025-11-01T00:45:34.5806344Z ##[endgroup]
2025-11-01T00:45:34.6133831Z [command]"C:\Program Files\Git\bin\git.exe" log -1 --format=%H
2025-11-01T00:45:34.6438428Z b53e0b9be95379af8dd39ddd01f8a588c88182e2
